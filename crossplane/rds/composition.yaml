apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: example
spec:
  compositeTypeRef:
    apiVersion: custom-api.example.org/v1alpha1
    kind: xDatabase
  mode: Pipeline
  pipeline:
  - step: vpc-resources
    functionRef:
      name: function-go-templating
    input:
      apiVersion: gotemplate.fn.crossplane.io/v1beta1
      kind: GoTemplate
      source: Inline
      inline: 
        template: |
          {{- define "tags" }}
            Department: Test1
            Name: {{ .observed.composite.resource.spec.id }}
          {{- end }}
          {{- if .observed.composite.resource.spec.createVPC }}
          ---
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: VPC
          metadata:
            name: {{ .observed.composite.resource.spec.id }}
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: {{ .observed.composite.resource.spec.id }}
          spec:
            forProvider:
              region: us-east-1
              cidrBlock: 10.0.0.0/16
              enableDnsSupport: true
              enableDnsHostnames: true
              tags:
                {{- include "tags" . | nindent 4 }}
          ---
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: Subnet
          metadata:
            labels:
              zone: us-east-1a
            name: {{ .observed.composite.resource.spec.id }}-subnet-a
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: {{ .observed.composite.resource.spec.id }}-subnet-a
          spec:
            forProvider:
              region: us-east-1
              availabilityZone: us-east-1a
              cidrBlock: 10.0.0.0/24
              vpcIdSelector:
                matchControllerRef: true
              tags:
                Name: {{ .observed.composite.resource.spec.id }}-subnet-a
          ---
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: Subnet
          metadata:
            name: {{ .observed.composite.resource.spec.id }}-subnet-b
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: {{ .observed.composite.resource.spec.id }}-subnet-b
            labels:
              zone: us-east-1b
          spec:
            forProvider:
              region: us-east-1
              availabilityZone: us-east-1b
              cidrBlock: 10.0.1.0/24
              vpcIdSelector:
                matchControllerRef: true
              tags:
                Name: {{ .observed.composite.resource.spec.id }}-subnet-b
          ---
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: Subnet
          metadata:
            name: {{ .observed.composite.resource.spec.id }}-subnet-c
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: {{ .observed.composite.resource.spec.id }}-subnet-c
            labels:
              zone: us-east-1c
          spec:
            forProvider:
              region: us-east-1
              availabilityZone: us-east-1c
              cidrBlock: 10.0.2.0/24
              vpcIdSelector:
                matchControllerRef: true
              tags:
                Name: {{ .observed.composite.resource.spec.id }}-subnet-c
          ---
          apiVersion: rds.aws.upbound.io/v1beta1
          kind: SubnetGroup
          metadata:
            name: {{ .observed.composite.resource.spec.id }}-subnetgroup
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: {{ .observed.composite.resource.spec.id }}-subnetgroup
          spec:
            forProvider:
              region: us-east-1
              description: Subnet group for RDS Instances
              subnetIdSelector:
                matchControllerRef: true
          ---
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: InternetGateway
          metadata:
            name: {{ .observed.composite.resource.spec.id }}-gateway
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: {{ .observed.composite.resource.spec.id }}-gateway
          spec:
            forProvider:
              region: us-east-1
              vpcIdSelector:
                matchControllerRef: true
              tags:
                Name: {{ .observed.composite.resource.spec.id }}
          ---
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: RouteTable
          metadata:
            name: {{ .observed.composite.resource.spec.id }}-routetable
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: {{ .observed.composite.resource.spec.id }}-routetable
          spec:
            forProvider:
              region: us-east-1
              vpcIdSelector:
                matchControllerRef: true
              tags:
                {{- include "tags" . | nindent 4 }}
          ---
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: Route
          metadata:
            name: {{ .observed.composite.resource.metadata.name }}-route
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: {{ .observed.composite.resource.metadata.name }}-route
          spec:
            forProvider:
              region: us-east-1
              routeTableIdSelector:
                matchControllerRef: true
              destinationCidrBlock: 0.0.0.0/0
              gatewayIdSelector:
                matchControllerRef: true
          ---
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: MainRouteTableAssociation
          metadata:
            name: {{ .observed.composite.resource.metadata.name }}-mainroutetableassociation
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: {{ .observed.composite.resource.metadata.name }}-mainroutetableassociation
          spec:
            forProvider:
              region: us-east-1
              routeTableIdSelector:
                matchControllerRef: true
              vpcIdSelector:
                matchControllerRef: true
          ---
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: RouteTableAssociation
          metadata:
            name: {{ .observed.composite.resource.metadata.name }}-routetabletssociation1a
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: {{ .observed.composite.resource.metadata.name }}-routetabletssociation1a
          spec:
            forProvider:
              region: us-east-1
              routeTableIdSelector:
                matchControllerRef: true
              subnetIdSelector:
                matchControllerRef: true
                matchLabels:
                  zone: us-east-1a
          ---
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: RouteTableAssociation
          metadata:
            name: {{ .observed.composite.resource.metadata.name }}-routetabletssociation1b
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: {{ .observed.composite.resource.metadata.name }}-routetabletssociation1b
          spec:
            forProvider:
              region: us-east-1
              routeTableIdSelector:
                matchControllerRef: true
              subnetIdSelector:
                matchControllerRef: true
                matchLabels:
                  zone: us-east-1b
          ---
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: RouteTableAssociation
          metadata:
            name: {{ .observed.composite.resource.metadata.name }}-routetabletssociation1c
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: {{ .observed.composite.resource.metadata.name }}-routetabletssociation1c
          spec:
            forProvider:
              region: us-east-1
              routeTableIdSelector:
                matchControllerRef: true
              subnetIdSelector:
                matchControllerRef: true
                matchLabels:
                  zone: us-east-1c
          ---
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: SecurityGroup
          metadata:
            name: {{ .observed.composite.resource.metadata.name }}-securitygroup
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: {{ .observed.composite.resource.metadata.name }}-securitygroup
          spec:
            forProvider:
              name: {{ .observed.composite.resource.spec.id }}
              description: Security group to allow all traffic from the internet on port 5432
              region: us-east-1
              vpcIdSelector:
                matchControllerRef: true
              tags:
                {{- include "tags" . | nindent 4 }}
          ---
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: SecurityGroupRule
          metadata:
            name: {{ .observed.composite.resource.metadata.name }}-securitygrouprule
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: {{ .observed.composite.resource.metadata.name }}-securitygrouprule
          spec:
            forProvider:
              region: us-east-1
              type: ingress
              {{- if eq $.observed.composite.resource.spec.engineType "aurora-postgresql" }}
              description: Allow all traffic from the internet on port 5432
              fromPort: 5432
              toPort: 5432
              {{- else if eq $.observed.composite.resource.spec.engineType "aurora-mysql" }}
              description: Allow all traffic from the internet on port 3306
              fromPort: 3306
              toPort: 3306
              {{- else }}
              {{- end }}
              protocol: tcp
              cidrBlocks:
                - 0.0.0.0/0
              securityGroupIdSelector:
                matchControllerRef: true
          {{- end}}
  - step: patch-and-transform
    functionRef:
      name: function-patch-and-transform
    input:
      apiVersion: pt.fn.crossplane.io/v1beta1
      kind: Resources
      patchSets:
      - name: metadata
        patches:
        - fromFieldPath: metadata.annotations
          toFieldPath: metadata.annotations
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
      - name: tags
        patches:
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.tags.Name
      resources:
      - name: xdatabaseversion
        base:
          apiVersion: tf.upbound.io/v1beta1
          kind: Workspace
          metadata:
            name: observe-only-database-version
          spec:
            forProvider:
              source: Inline
              module: |
                data "aws_rds_engine_version" "observe_only" {
                  engine = var.engineType
                }
                output "engine_version" {
                  description = "Get the latest default engine version"
                  value       = try(data.aws_rds_engine_version.observe_only.version, "")
                }
                output "parameter_group_family" {
                  description = "Get the parameter group family"
                  value       = try(data.aws_rds_engine_version.observe_only.parameter_group_family, "")
                }
                variable "engineType" {
                  description = "Engine type"
                  type        = string
                }
                
              vars:
                - key: engineType
        patches:
        - fromFieldPath: spec.engineType
          toFieldPath: spec.forProvider.vars[0].value
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.outputs.engine_version
          toFieldPath: status.share.engine_version
          policy:
            fromFieldPath: Optional
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.outputs.parameter_group_family
          toFieldPath: status.share.parameter_group_family
          policy:
            fromFieldPath: Optional
      - name: xcluster
        base:
          apiVersion: rds.aws.upbound.io/v1beta2
          kind: Cluster
          metadata:
            annotations:
              meta.upbound.io/example-id: rds/v1beta2/cluster
            name: example
          spec:
            publishConnectionDetailsTo:
              name: sample-rds-cluster-secret
            forProvider:
              databaseName: example
              enabledCloudwatchLogsExports:
                - postgresql
              iamDatabaseAuthenticationEnabled: true
              autoGeneratePassword: true
              dbClusterParameterGroupNameSelector:
                matchControllerRef: true
              dbInstanceParameterGroupNameSelector:
                matchControllerRef: true
              manageMasterUserPassword: true
              dbSubnetGroupNameSelector:
                matchControllerRef: true
              vpcSecurityGroupIdSelector:
                matchControllerRef: true
              tags:
                Name: example
              masterUsername: cpadmin
              skipFinalSnapshot: true
            providerConfigRef:
              name: default
        patches:
        - type: PatchSet
          patchSetName: tags
        - fromFieldPath: spec.id
          toFieldPath: metadata.name
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.engineType
          toFieldPath: spec.forProvider.engine
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: spec.publishConnectionDetailsTo.name
          transforms:
            - type: string
              string:
                fmt: "%s-condetail-secret"
                type: Format
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: "spec.engineType"
            strategy: string
            string:
              fmt: "%s"
          toFieldPath: "spec.forProvider.enabledCloudwatchLogsExports"
          transforms:
            - type: map
              map:
                aurora-postgresql: ["postgresql"]
                aurora-mysql: ["audit"]
      - name: xclusterInstanceWriter
        base:
          apiVersion: rds.aws.upbound.io/v1beta1
          kind: ClusterInstance
          metadata:
            annotations:
              meta.upbound.io/example-id: rds/v1beta1/clusterinstance
            labels:
              testing.upbound.io/example-name: example
              instance: writer
            name: example
          spec:
            forProvider:
              clusterIdentifierSelector:
                matchControllerRef: true
              engine: aurora-postgresql
              instanceClass: db.t3.medium
              publiclyAccessible: true
              dbSubnetGroupNameSelector:
                matchControllerRef: true
        patches:
        - type: PatchSet
          patchSetName: tags
        - fromFieldPath: spec.id
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-writer"
                type: Format
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
        - fromFieldPath: status.atProvider.outputs.engine_version
          toFieldPath: spec.forProvider.engineVersion
        - fromFieldPath: spec.engineType
          toFieldPath: spec.forProvider.engine
      - name: xclusterInstanceReader
        base:
          apiVersion: rds.aws.upbound.io/v1beta1
          kind: ClusterInstance
          metadata:
            annotations:
              meta.upbound.io/example-id: rds/v1beta1/clusterinstance
            labels:
              testing.upbound.io/example-name: example
              instance: reader
            name: examplereader
          spec:
            forProvider:
              clusterIdentifierSelector:
                matchControllerRef: true
              engine: aurora-postgresql
              instanceClass: db.t3.medium
              publiclyAccessible: true
              dbSubnetGroupNameSelector:
                matchControllerRef: true
        patches:
        - fromFieldPath: spec.id
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-reader"
                type: Format
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
        - fromFieldPath: status.atProvider.outputs.engine_version
          toFieldPath: spec.forProvider.engineVersion
        - fromFieldPath: spec.engineType
          toFieldPath: spec.forProvider.engine
      - name: readerusage
        base:
          apiVersion: apiextensions.crossplane.io/v1beta1
          kind: Usage
          metadata:
            name: reader-instance-usage
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: reader-instance-usage
          spec:
            replayDeletion: true
            of:
              apiVersion: s3.aws.upbound.io/v1beta1
              kind: Bucket
              resourceSelector:
                matchLabels:
                  instance: writer
            by:
              apiVersion: ec2.aws.upbound.io/v1beta2
              kind: Instance
              resourceSelector:
                matchLabels:
                  instance: reader
      - name: xparametergroup
        base:
          apiVersion: rds.aws.upbound.io/v1beta1
          kind: ParameterGroup
          metadata:
            annotations:
              meta.upbound.io/example-id: rds/v1beta1/cluster
            labels:
              testing.upbound.io/example-name: example-ci-cluster-instance
            name: example-parametergroup-ci-cluster-instance
          spec:
            forProvider:
              description: example
              family: aurora-postgresql14
              region: us-east-2
            providerConfigRef:
              name: default
        patches:
        - type: PatchSet
          patchSetName: tags
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-parametergroup"
                type: Format
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
        - type: ToEnvironmentFieldPath
          fromFieldPath: status.atProvider.id
          toFieldPath: vpcId
        - type: FromCompositeFieldPath
          fromFieldPath: status.share.parameter_group_family
          toFieldPath: spec.forProvider.family
          policy:
            fromFieldPath: Required
      - name: xclusterparametergroup
        base:
          apiVersion: rds.aws.upbound.io/v1beta1
          kind: ClusterParameterGroup
          metadata:
            annotations:
              meta.upbound.io/example-id: rds/v1beta1/clusterinstance
            labels:
              testing.upbound.io/example-name: example-ci
            name: example-clusterparametergroup-ci
          spec:
            forProvider:
              description: RDS default cluster parameter group
              region: us-east-1
            providerConfigRef:
              name: default
        patches:
        - type: PatchSet
          patchSetName: tags
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-clusterparametergroup"
                type: Format
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: status.share.parameter_group_family
          toFieldPath: spec.forProvider.family
          policy:
            fromFieldPath: Required
  - step: auto-ready
    functionRef:
      name: function-auto-ready